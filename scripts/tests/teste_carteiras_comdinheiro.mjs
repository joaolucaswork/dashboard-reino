/**
 * Script de Teste - Busca de Carteiras Comdinheiro
 *
 * Testa a funcionalidade de busca de carteiras/usu√°rios do Comdinheiro
 * integrada √† nossa implementa√ß√£o SvelteKit nativa.
 */

const BASE_URL = "http://localhost:5173"; // URL do SvelteKit dev server

// Credenciais de teste (substitua pelas suas)
const CREDENTIALS = {
  username: "seu.usuario@email.com", // Configure suas credenciais aqui
  password: "sua_senha_aqui",
};

// Cores para output no console
const colors = {
  green: "\x1b[32m",
  red: "\x1b[31m",
  yellow: "\x1b[33m",
  blue: "\x1b[34m",
  reset: "\x1b[0m",
  bold: "\x1b[1m",
};

function log(message, color = "reset") {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

async function testarBuscaCarteiras() {
  log("üöÄ Testando Busca de Carteiras Comdinheiro (CORRIGIDA)", "bold");
  log("=" * 60, "blue");
  log("üìù Usando implementa√ß√£o corrigida baseada no sistema original", "blue");

  try {
    // Teste 1: Buscar carteiras sem credenciais (deve falhar)
    log("\n‚ùå Teste 1: Busca sem credenciais (deve falhar)", "yellow");

    const semCredenciaisResponse = await fetch(
      `${BASE_URL}/api/comdinheiro?action=carteiras`
    );
    const semCredenciaisData = await semCredenciaisResponse.json();

    if (!semCredenciaisData.success) {
      log("‚úÖ Valida√ß√£o funcionando - erro esperado sem credenciais", "green");
      log(`üìù Erro: ${semCredenciaisData.error}`, "blue");
    } else {
      log("‚ùå Valida√ß√£o falhou - deveria rejeitar sem credenciais", "red");
    }

    // Teste 2: Buscar carteiras com credenciais (se fornecidas)
    log("\nüîç Teste 2: Busca com credenciais v√°lidas", "yellow");
    if (CREDENTIALS.username !== "seu.usuario@email.com") {
      log("\nüîç Teste 2: Busca com credenciais v√°lidas", "yellow");

      const params = new URLSearchParams({
        action: "carteiras",
        username: CREDENTIALS.username,
        password: CREDENTIALS.password,
      });

      const comCredenciaisResponse = await fetch(
        `${BASE_URL}/api/comdinheiro?${params}`
      );
      const comCredenciaisData = await comCredenciaisResponse.json();

      if (comCredenciaisData.success) {
        log("‚úÖ Busca de carteiras bem-sucedida", "green");
        log(`üìä Total de carteiras: ${comCredenciaisData.total}`, "blue");
        log(`üè¶ Fonte: ${comCredenciaisData.source}`, "blue");

        if (
          comCredenciaisData.carteiras &&
          comCredenciaisData.carteiras.length > 0
        ) {
          log("üìã Primeiras carteiras encontradas:", "blue");
          comCredenciaisData.carteiras
            .slice(0, 5)
            .forEach((carteira, index) => {
              log(`   ${index + 1}. ${carteira}`, "blue");
            });

          if (comCredenciaisData.carteiras.length > 5) {
            log(
              `   ... e mais ${
                comCredenciaisData.carteiras.length - 5
              } carteiras`,
              "blue"
            );
          }
        } else {
          log("‚ö†Ô∏è  Nenhuma carteira encontrada", "yellow");
        }
      } else {
        log(`‚ùå Erro na busca: ${comCredenciaisData.error}`, "red");
      }
    } else {
      log("\n‚ö†Ô∏è  Teste 2: Pulado (configure credenciais v√°lidas)", "yellow");
    }

    // Teste 3: Teste de performance
    log("\n‚ö° Teste 3: Performance da busca", "yellow");

    if (CREDENTIALS.username !== "seu.usuario@email.com") {
      const start = Date.now();

      const params = new URLSearchParams({
        action: "carteiras",
        username: CREDENTIALS.username,
        password: CREDENTIALS.password,
      });

      const performanceResponse = await fetch(
        `${BASE_URL}/api/comdinheiro?${params}`
      );
      const performanceData = await performanceResponse.json();

      const end = Date.now();
      const tempo = end - start;

      if (performanceData.success) {
        log(`‚úÖ Busca completada em ${tempo}ms`, "green");
        if (tempo < 5000) {
          log("üöÄ Performance excelente!", "green");
        } else if (tempo < 10000) {
          log("üëç Performance boa", "blue");
        } else {
          log("‚ö†Ô∏è  Performance pode ser melhorada", "yellow");
        }
      }
    } else {
      log("‚ö†Ô∏è  Teste de performance pulado (configure credenciais)", "yellow");
    }

    // Teste 4: Teste de timeout
    log("\n‚è±Ô∏è  Teste 4: Comportamento com timeout", "yellow");

    // Simular uma URL que pode demorar para responder
    const timeoutParams = new URLSearchParams({
      action: "carteiras",
      username: "usuario_teste",
      password: "senha_teste",
    });

    try {
      const timeoutResponse = await fetch(
        `${BASE_URL}/api/comdinheiro?${timeoutParams}`
      );
      const timeoutData = await timeoutResponse.json();

      if (!timeoutData.success) {
        log("‚úÖ Timeout/erro tratado corretamente", "green");
        log(`üìù Erro: ${timeoutData.error}`, "blue");
      }
    } catch (error) {
      log("‚úÖ Timeout/erro de rede tratado corretamente", "green");
    }

    log("\n" + "=" * 60, "blue");
    log("üéâ Testes de carteiras conclu√≠dos!", "bold");
  } catch (error) {
    log(`\n‚ùå Erro durante os testes: ${error.message}`, "red");
    log(
      "üí° Certifique-se de que o servidor SvelteKit est√° rodando em localhost:5173",
      "yellow"
    );
  }
}

// Fun√ß√£o para testar a interface visual
async function testarInterface() {
  log("\nüé® Teste da Interface Visual", "yellow");

  try {
    const response = await fetch(`${BASE_URL}/tabelas`);

    if (response.ok) {
      log("‚úÖ P√°gina de tabelas acess√≠vel", "green");
      log("üîó Acesse: http://localhost:5173/tabelas", "blue");
      log("üìù Teste manualmente:", "blue");
      log("   1. Alterne entre 'Salesforce' e 'Comdinheiro'", "blue");
      log("   2. Configure credenciais do Comdinheiro", "blue");
      log("   3. Busque carteiras", "blue");
      log("   4. Selecione uma carteira", "blue");
    } else {
      log("‚ùå P√°gina de tabelas n√£o acess√≠vel", "red");
    }
  } catch (error) {
    log(`‚ùå Erro ao acessar interface: ${error.message}`, "red");
  }
}

// Executar testes
async function main() {
  await testarBuscaCarteiras();
  await testarInterface();

  log("\nüìñ Como usar:", "bold");
  log("1. Configure suas credenciais no objeto CREDENTIALS", "blue");
  log("2. Inicie o servidor SvelteKit: npm run dev", "blue");
  log("3. Execute este script: node teste_carteiras_comdinheiro.js", "blue");
  log("4. Acesse a interface em: http://localhost:5173/tabelas", "blue");
  log("5. üîÑ Alterne entre Salesforce e Comdinheiro", "blue");
  log("6. ‚öôÔ∏è  Configure credenciais e teste a busca", "blue");
}

// Verificar se est√° sendo executado diretamente
if (import.meta.url === `file://${process.argv[1]}`) {
  main().catch(console.error);
}

export { testarBuscaCarteiras, testarInterface };
